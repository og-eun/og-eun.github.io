I".	<p>저자가 얘기하는 운이 없는 경우 마주치게 될 코드는 아래와 같다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="k">try</span> <span class="o">{</span>
    <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    <span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">)</span>
        <span class="n">range</span><span class="o">[</span><span class="n">i</span><span class="o">++].</span><span class="na">climb</span><span class="o">();</span>
<span class="o">}</span><span class="k">catch</span> <span class="o">(</span><span class="nc">ArrayIndexOutOfBoundsException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>위 코드가 운 없는 사람이 마주하게 되는 이유</p>

<ol>
  <li>가독성</li>
  <li>무한루프를 돌고 돌아 배열 끝에서야 예외를 마주한다.</li>
</ol>

<p>그런데 위 코드에서 예외가 필요할까?</p>

<p>아래 코드와 위 코드는 다른 일을 하지 않는다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="k">for</span> <span class="o">(</span><span class="nc">Mountain</span> <span class="n">m</span> <span class="o">:</span> <span class="n">range</span><span class="o">)</span>
    <span class="n">m</span><span class="o">.</span><span class="na">climb</span><span class="o">();</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>일반적 반복문도 배열의 끝에 도달하면 종료된다.</p>

<p>따라서</p>

<ol>
  <li>예외는 말 그대로 예외 상황에서만 써야 한다</li>
  <li>잘 설계된 API 라면 클라이언트가 정상적 제어 흐름에서 예외를 사용할 일이 없게 해야 한다.</li>
</ol>

<p>결론 : 아무때나 예외를 남발하지 말자.</p>
:ET