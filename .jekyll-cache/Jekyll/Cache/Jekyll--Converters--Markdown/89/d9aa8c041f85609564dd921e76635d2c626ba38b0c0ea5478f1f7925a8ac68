I"><div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre>class Point {
    public double x;
    public double y;
}
</pre></td></tr></tbody></table></code></pre></div></div>

<p>데이터 필드에 직접 접근이 가능하다.</p>

<p>이는 캡슐화 이점을 제공하지 못한다는 것이다.</p>

<p>필드를 <code class="language-plaintext highlighter-rouge">private</code> 으로 변경하고 <code class="language-plaintext highlighter-rouge">public</code> 접근자 (<code class="language-plaintext highlighter-rouge">getter</code>) 를 추가하는 방법으로 이러한 문제를 해결할 수 있다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre><span class="kd">class</span> <span class="nc">Point</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="kt">double</span> <span class="n">x</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">double</span> <span class="n">y</span><span class="o">;</span>
    
    <span class="kd">public</span> <span class="kt">double</span> <span class="nf">getX</span><span class="o">()</span> <span class="o">{</span><span class="k">return</span> <span class="n">x</span><span class="o">;}</span>
    <span class="kd">public</span> <span class="kt">double</span> <span class="nf">getY</span><span class="o">()</span> <span class="o">{</span><span class="k">return</span> <span class="n">y</span><span class="o">;}</span>
    
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setX</span><span class="o">(</span><span class="kt">double</span> <span class="n">x</span><span class="o">)</span> <span class="o">{</span><span class="k">this</span><span class="o">.</span><span class="na">x</span> <span class="o">=</span> <span class="n">x</span><span class="o">;}</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setY</span><span class="o">(</span><span class="kt">double</span> <span class="n">y</span><span class="o">)</span> <span class="o">{</span><span class="k">this</span><span class="o">.</span><span class="na">y</span> <span class="o">=</span> <span class="n">y</span><span class="o">;}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>클래스가 <code class="language-plaintext highlighter-rouge">public</code> 이라면 이 방식을 사용해야 한다.</p>

<p>접근자 메서드를 제공함으로써 클래수 내부의 유연성을 획득하였다.</p>

:ET